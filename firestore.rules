rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin user by their unique ID (UID)
    function isAdmin() {
      return request.auth.uid == 'NJp83l2DBcPjAz7kR03nQ9MjIYZ2';
    }

    // Matches, News, Venues, Teams: Public read, admin-only write
    match /matches/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /news/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /venues/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /teams/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Players: Public read, admin OR the player themselves can write
    match /players/{playerId} {
      allow read: if true;
      // Player can edit their own data, admin can edit any player.
      // A user can create their own player document, but only an admin can create for others.
      allow create: if isAdmin() || request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin() || request.auth.uid == resource.data.userId;
      allow delete: if isAdmin();
    }

    // Users: A user can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}